{"version":3,"sources":["inputbox.js","todotext.js","item.jsx","app.js","index.js"],"names":["axios","defaults","xsrfCookieName","xsrfHeaderName","Inputbox","props","useState","text","setText","event","a","preventDefault","post","task","response","addToDo","data","type","name","placeholder","id","onChange","target","value","onClick","Todotext","pk","put","useEffect","className","onKeyUp","key","enterPressed","Item","todo","deleteToDo","delete","App","toDoList","setToDoList","filter","index","get","fetchData","map","appDiv","document","getElementById","ReactDOM","render"],"mappings":"sUAMAA,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cA6BjBC,MA3Bf,SAAkBC,GAEd,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAFoB,4CAQpB,WAA6BC,GAA7B,eAAAC,EAAA,6DACID,EAAME,iBADV,SAG2BX,IACtBY,KAAK,uCAAwC,CAACC,KAAMN,IAJzD,OAGUO,EAHV,OAKIT,EAAMU,QAAQD,EAASE,MAEvBR,EAAQ,IAPZ,4CARoB,sBAkBpB,OACI,iCACI,uBAAOS,KAAK,OAAOC,KAAK,WAAWC,YAAY,iBAC/CC,GAAG,YAAYC,SAjBvB,SAAuBZ,GACnBD,EAAQC,EAAMa,OAAOC,QAgBuBA,MAAOhB,IAC/C,wBAAQiB,QAtBI,4CAsBZ,SAAgC,cAAC,IAAD,U,sBC1B5CxB,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cA8BjBsB,MA5Bf,SAAkBpB,GACd,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KADoB,4CAYpB,4BAAAE,EAAA,6DACUgB,EAAKrB,EAAMe,GADrB,SAE4BpB,IACvB2B,IAAI,wCAA0CD,EAAI,CAACb,KAAMN,IAH9D,0DAZoB,sBAkBpB,OAdAqB,qBAAU,WACNpB,EAAQH,EAAME,QACf,CAACF,IAaA,uBAAOY,KAAK,OAAOM,MAAOhB,EAAMsB,UAAU,YAC1CR,SAZJ,SAAqBZ,GACjBD,EAAQC,EAAMa,OAAOC,QAWEO,QAAS,SAACrB,GACZ,UAAdA,EAAMsB,KArBG,mCAsBRC,OCxBhBhC,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAiBjB8B,MAff,SAAc5B,GACV,OACI,+BACI,cAAC,EAAD,CAAUE,KAAMF,EAAM6B,KAAN,KAAoBd,GAAIf,EAAM6B,KAAN,KACxC,sBAAML,UAAU,YAChBL,QAAS,WACLnB,EAAM8B,WAAW9B,EAAMe,IAEvB,IAAMM,EAAKrB,EAAM6B,KAAN,GACXlC,IAAMoC,OAAO,wCAA0CV,IAL3D,SAMG,cAAC,IAAD,U,MCZf1B,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cA0CjBkC,MAxCf,WACI,MAAgC/B,mBAAS,IAAzC,mBAAOgC,EAAP,KAAiBC,EAAjB,KASA,SAASJ,EAAWf,GAChBmB,EACID,EAASE,QAAO,SAACjB,EAAOkB,GAAR,OAAkBA,IAAUrB,MAepD,OAVAQ,qBAAU,WAAM,4CACZ,4BAAAlB,EAAA,sEAC2BV,IACtB0C,IAAI,sCAFT,OACU5B,EADV,OAGIyB,EAAYzB,EAASE,MAHzB,4CADY,uBAAC,WAAD,wBAOZ2B,KACD,IAGC,sBAAKvB,GAAG,SAAR,UACI,4CACA,cAAC,EAAD,CAAUL,QA3BlB,SAAiBmB,GACbK,EAAY,GAAD,mBACJD,GADI,CAEPJ,QAyBA,6BACKI,EAASM,KAAI,SAACV,EAAMO,GAAP,OACb,cAAC,EAAD,CAAkBrB,GAAIqB,EAAOP,KAAMA,EACpCC,WAAYA,GADAM,YCrCtBI,EAASC,SAASC,eAAe,QACvCC,IAASC,OAAO,cAAC,EAAD,IAASJ,K","file":"static/js/main.ddf2a873.chunk.js","sourcesContent":["import {useState} from \"react\";\r\nimport \"./inputbox.css\"\r\nimport {VscAdd} from \"react-icons/vsc\";\r\n\r\nimport axios from 'axios';\r\n\r\naxios.defaults.xsrfCookieName = 'csrftoken'\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\r\n\r\nfunction Inputbox(props){\r\n\r\n    const [text, setText] = useState(\"\");\r\n\r\n    function changeInInput(event){\r\n        setText(event.target.value);\r\n    }\r\n\r\n    async function buttonClicked(event){\r\n        event.preventDefault();\r\n\r\n        const response = await axios\r\n        .post(\"http://localhost:8000/todoapi/create\", {task: text})\r\n        props.addToDo(response.data)\r\n\r\n        setText(\"\");\r\n    }\r\n\r\n    return(\r\n        <form>\r\n            <input type=\"text\" name=\"todoText\" placeholder=\"Write to do...\" \r\n            id=\"inputArea\" onChange={changeInInput} value={text}/>\r\n            <button onClick={buttonClicked}><VscAdd /></button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Inputbox;\r\n","import {useState, useEffect} from \"react\";\r\nimport \"./todotext.css\";\r\n\r\nimport axios from 'axios';\r\n\r\naxios.defaults.xsrfCookieName = 'csrftoken'\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\r\n\r\nfunction Todotext(props){\r\n    const [text, setText] = useState(\"\");\r\n\r\n    // this will update state text on change in props\r\n    useEffect(() => {\r\n        setText(props.text)\r\n    }, [props])\r\n\r\n    function textChanged(event){\r\n        setText(event.target.value);\r\n    }\r\n\r\n    async function enterPressed(){\r\n        const pk = props.id;\r\n        const response  = await axios\r\n        .put(\"http://localhost:8000/todoapi/update/\" + pk, {task: text})\r\n    }\r\n\r\n    return(\r\n        <input type=\"text\" value={text} className=\"textInput\"\r\n        onChange={textChanged} onKeyUp={(event) => {\r\n            if(event.key === \"Enter\"){\r\n                enterPressed();\r\n            }\r\n        }}/>\r\n    )\r\n}\r\n\r\nexport default Todotext;\r\n","import \"./item.css\"\r\nimport axios from 'axios';\r\n\r\nimport {FaTrash} from \"react-icons/fa\"\r\nimport Todotext from \"./todotext\";\r\n\r\naxios.defaults.xsrfCookieName = 'csrftoken'\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\r\n\r\nfunction Item(props){\r\n    return(\r\n        <li>\r\n            <Todotext text={props.todo[\"task\"]} id={props.todo[\"id\"]}/>\r\n            <span className=\"deleteBtn\"\r\n            onClick={() => {\r\n                props.deleteToDo(props.id)\r\n                \r\n                const pk = props.todo[\"id\"]\r\n                axios.delete(\"http://localhost:8000/todoapi/delete/\" + pk)\r\n            }}><FaTrash /></span>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Item;\r\n","import {useState,  useEffect} from \"react\";\r\nimport Inputbox from \"./inputbox\";\r\nimport Item from \"./item\"\r\nimport \"./app.css\"\r\n\r\nimport axios from 'axios';\r\n\r\naxios.defaults.xsrfCookieName = 'csrftoken'\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\r\n\r\nfunction App(){\r\n    const [toDoList, setToDoList] = useState([]);\r\n\r\n    function addToDo(todo){\r\n        setToDoList([\r\n            ...toDoList,\r\n            todo\r\n        ]);\r\n    }\r\n\r\n    function deleteToDo(id){\r\n        setToDoList(\r\n            toDoList.filter((value, index) => index !== id)\r\n        );\r\n    }\r\n\r\n    // this executes get request only once\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const response = await axios\r\n            .get(\"http://localhost:8000/todoapi/list\")\r\n            setToDoList(response.data);\r\n        }\r\n\r\n        fetchData();\r\n    }, [])\r\n\r\n    return(\r\n        <div id=\"appDiv\">\r\n            <h1>To Do List</h1>\r\n            <Inputbox addToDo={addToDo}/>\r\n            <ul>\r\n                {toDoList.map((todo, index) => \r\n                (<Item key={index} id={index} todo={todo} \r\n                deleteToDo={deleteToDo}/>))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from \"./app\";\n\nconst appDiv = document.getElementById(\"root\");\nReactDOM.render(<App />, appDiv);\n"],"sourceRoot":""}